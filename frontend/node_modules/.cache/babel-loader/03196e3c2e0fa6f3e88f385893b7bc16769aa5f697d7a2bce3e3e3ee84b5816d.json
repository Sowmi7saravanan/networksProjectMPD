{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sowmiya\\\\Desktop\\\\MobilePhoneDetector\\\\frontend\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { getJson, postJson } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizPage({\n  token,\n  userId\n}) {\n  _s();\n  const [quiz, setQuiz] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [started, setStarted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(30 * 60); // 30 minutes default\n  const videoRef = useRef(null);\n  const audioCtxRef = useRef(null);\n  const analyserRef = useRef(null);\n  const detectionFrameRef = useRef(null);\n  useEffect(() => {\n    async function loadQuiz() {\n      const q = await getJson('/api/quiz', token);\n      setQuiz(q);\n      setAnswers(new Array(q.questions.length).fill(null));\n    }\n    loadQuiz();\n  }, [token]);\n\n  // Start media and detection\n  async function startTest() {\n    // Request camera and mic\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.play().catch(() => {});\n      }\n      // setup ultrasonic emitter + receiver\n      startUltrasonic(stream);\n      setStarted(true);\n      // start timer\n      startTimer();\n    } catch (err) {\n      console.error(\"Camera/mic error:\", err);\n      alert('Camera and microphone are required to start the test. (' + err.name + ')');\n    }\n  }\n  function startTimer() {\n    const interval = setInterval(() => {\n      setTimeLeft(t => {\n        if (t <= 1) {\n          clearInterval(interval);\n          onSubmit();\n          return 0;\n        }\n        return t - 1;\n      });\n    }, 1000);\n  }\n\n  // Ultrasonic tone and detection (prototype)\n  function startUltrasonic(stream) {\n    // AudioContext\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    const audioCtx = new AudioContext();\n    audioCtxRef.current = audioCtx;\n\n    // Create oscillator for 19kHz\n    const osc = audioCtx.createOscillator();\n    osc.type = 'sine';\n    try {\n      osc.frequency.setValueAtTime(19000, audioCtx.currentTime);\n    } catch (e) {/* some browsers block high freq */}\n    const gain = audioCtx.createGain();\n    gain.gain.value = 0.2; // low volume\n\n    osc.connect(gain).connect(audioCtx.destination);\n    osc.start();\n\n    // Set up analyser to read mic input\n    const mic = audioCtx.createMediaStreamSource(stream);\n    const analyser = audioCtx.createAnalyser();\n    analyser.fftSize = 4096;\n    mic.connect(analyser);\n    analyserRef.current = analyser;\n    const data = new Uint8Array(analyser.frequencyBinCount);\n\n    // detection loop\n    function detect() {\n      analyser.getByteFrequencyData(data);\n      // calculate bin for ~19kHz\n      const sampleRate = audioCtx.sampleRate;\n      const binFreq = sampleRate / analyser.fftSize;\n      const binIndex = Math.round(19000 / binFreq);\n      const amplitude = data[binIndex] || 0;\n      // threshold experimentally chosen — tune per device\n      if (amplitude > 40) {\n        // send alert to server\n        postJson('/api/alert', {\n          type: 'ultrasonic',\n          message: 'Possible phone detected (amp=' + amplitude + ')'\n        }, token);\n        // also show user alert\n        console.warn('Possible phone detected — amplitude', amplitude);\n      }\n      detectionFrameRef.current = requestAnimationFrame(detect);\n    }\n    detect();\n  }\n  function chooseAnswer(i, optIdx) {\n    const copy = answers.slice();\n    copy[i] = optIdx;\n    setAnswers(copy);\n    // autosave to localStorage (optional)\n    localStorage.setItem('autosave_answers', JSON.stringify(copy));\n  }\n  async function onSubmit() {\n    // stop detection\n    if (detectionFrameRef.current) cancelAnimationFrame(detectionFrameRef.current);\n    if (audioCtxRef.current) audioCtxRef.current.close().catch(() => {});\n    // submit\n    const res = await postJson('/api/submit', {\n      answers\n    }, token);\n    alert(`Test submitted. Score: ${res.score}/${res.total}`);\n    // redirect or clear\n    window.location.reload();\n  }\n  if (!quiz) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"centered\",\n    children: \"Loading quiz\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: quiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\"Time left: \", Math.floor(timeLeft / 60), \":\", String(timeLeft % 60).padStart(2, '0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), !started ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Camera and microphone permission is mandatory. Click Start to allow.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTest,\n        children: \"Start Test (Allow camera & mic)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          width: \"320\",\n          height: \"240\",\n          autoPlay: true,\n          muted: true,\n          style: {\n            border: '2px solid #666'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSubmit,\n            children: \"Submit Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions\",\n        children: quiz.questions.map((q, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Q\", i + 1, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 20\n            }, this), \" \", q.q]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: q.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: 'q' + i,\n                  checked: answers[i] === idx,\n                  onChange: () => chooseAnswer(i, idx)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 25\n                }, this), ' ', opt]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 23\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"yG7UzyGu/zNUvpEVYzVnbVC1H00=\");\n_c = QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","getJson","postJson","jsxDEV","_jsxDEV","QuizPage","token","userId","_s","quiz","setQuiz","answers","setAnswers","started","setStarted","timeLeft","setTimeLeft","videoRef","audioCtxRef","analyserRef","detectionFrameRef","loadQuiz","q","Array","questions","length","fill","startTest","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","play","catch","startUltrasonic","startTimer","err","console","error","alert","name","interval","setInterval","t","clearInterval","onSubmit","AudioContext","window","webkitAudioContext","audioCtx","osc","createOscillator","type","frequency","setValueAtTime","currentTime","e","gain","createGain","value","connect","destination","start","mic","createMediaStreamSource","analyser","createAnalyser","fftSize","data","Uint8Array","frequencyBinCount","detect","getByteFrequencyData","sampleRate","binFreq","binIndex","Math","round","amplitude","message","warn","requestAnimationFrame","chooseAnswer","i","optIdx","copy","slice","localStorage","setItem","JSON","stringify","cancelAnimationFrame","close","res","score","total","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","floor","String","padStart","onClick","ref","width","height","autoPlay","muted","style","border","map","options","opt","idx","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/sowmiya/Desktop/MobilePhoneDetector/frontend/src/pages/QuizPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { getJson, postJson } from '../api';\r\n\r\nexport default function QuizPage({ token, userId }){\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [started, setStarted] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(30*60); // 30 minutes default\r\n  const videoRef = useRef(null);\r\n  const audioCtxRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const detectionFrameRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    async function loadQuiz(){\r\n      const q = await getJson('/api/quiz', token);\r\n      setQuiz(q);\r\n      setAnswers(new Array(q.questions.length).fill(null));\r\n    }\r\n    loadQuiz();\r\n  }, [token]);\r\n\r\n  // Start media and detection\r\n  async function startTest(){\r\n    // Request camera and mic\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n      if(videoRef.current){ videoRef.current.srcObject = stream; videoRef.current.play().catch(()=>{}); }\r\n      // setup ultrasonic emitter + receiver\r\n      startUltrasonic(stream);\r\n      setStarted(true);\r\n      // start timer\r\n      startTimer();\r\n    } catch(err){\r\n  console.error(\"Camera/mic error:\", err);\r\n  alert('Camera and microphone are required to start the test. (' + err.name + ')');\r\n}\r\n\r\n  }\r\n\r\n  function startTimer(){\r\n    const interval = setInterval(() => {\r\n      setTimeLeft(t => {\r\n        if(t <= 1){ clearInterval(interval); onSubmit(); return 0; }\r\n        return t - 1;\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  // Ultrasonic tone and detection (prototype)\r\n  function startUltrasonic(stream){\r\n    // AudioContext\r\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\r\n    const audioCtx = new AudioContext();\r\n    audioCtxRef.current = audioCtx;\r\n\r\n    // Create oscillator for 19kHz\r\n    const osc = audioCtx.createOscillator();\r\n    osc.type = 'sine';\r\n    try { osc.frequency.setValueAtTime(19000, audioCtx.currentTime); } catch(e){ /* some browsers block high freq */ }\r\n    const gain = audioCtx.createGain();\r\n    gain.gain.value = 0.2; // low volume\r\n\r\n    osc.connect(gain).connect(audioCtx.destination);\r\n    osc.start();\r\n\r\n    // Set up analyser to read mic input\r\n    const mic = audioCtx.createMediaStreamSource(stream);\r\n    const analyser = audioCtx.createAnalyser();\r\n    analyser.fftSize = 4096;\r\n    mic.connect(analyser);\r\n    analyserRef.current = analyser;\r\n\r\n    const data = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n    // detection loop\r\n    function detect(){\r\n      analyser.getByteFrequencyData(data);\r\n      // calculate bin for ~19kHz\r\n      const sampleRate = audioCtx.sampleRate;\r\n      const binFreq = sampleRate / analyser.fftSize;\r\n      const binIndex = Math.round(19000 / binFreq);\r\n      const amplitude = data[binIndex] || 0;\r\n      // threshold experimentally chosen — tune per device\r\n      if(amplitude > 40){\r\n        // send alert to server\r\n        postJson('/api/alert', { type: 'ultrasonic', message: 'Possible phone detected (amp=' + amplitude + ')' }, token);\r\n        // also show user alert\r\n        console.warn('Possible phone detected — amplitude', amplitude);\r\n      }\r\n      detectionFrameRef.current = requestAnimationFrame(detect);\r\n    }\r\n    detect();\r\n  }\r\n\r\n  function chooseAnswer(i, optIdx){\r\n    const copy = answers.slice();\r\n    copy[i] = optIdx;\r\n    setAnswers(copy);\r\n    // autosave to localStorage (optional)\r\n    localStorage.setItem('autosave_answers', JSON.stringify(copy));\r\n  }\r\n\r\n  async function onSubmit(){\r\n    // stop detection\r\n    if(detectionFrameRef.current) cancelAnimationFrame(detectionFrameRef.current);\r\n    if(audioCtxRef.current) audioCtxRef.current.close().catch(()=>{});\r\n    // submit\r\n    const res = await postJson('/api/submit', { answers }, token);\r\n    alert(`Test submitted. Score: ${res.score}/${res.total}`);\r\n    // redirect or clear\r\n    window.location.reload();\r\n  }\r\n\r\n  if(!quiz) return <div className=\"centered\">Loading quiz…</div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h2>{quiz.title}</h2>\r\n        <div className=\"timer\">Time left: {Math.floor(timeLeft/60)}:{String(timeLeft%60).padStart(2,'0')}</div>\r\n      </div>\r\n\r\n      {!started ? (\r\n        <div className=\"start-block\">\r\n          <p>Camera and microphone permission is mandatory. Click Start to allow.</p>\r\n          <button onClick={startTest}>Start Test (Allow camera & mic)</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"exam-area\">\r\n          <div className=\"left-col\">\r\n            <video ref={videoRef} width=\"320\" height=\"240\" autoPlay muted style={{border:'2px solid #666'}}/>\r\n            <div className=\"actions\">\r\n              <button onClick={onSubmit}>Submit Test</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"questions\">\r\n            {quiz.questions.map((q, i) => (\r\n              <div key={i} className=\"question-card\">\r\n                <p><strong>Q{i+1}.</strong> {q.q}</p>\r\n                <ul>\r\n                  {q.options.map((opt, idx) => (\r\n                    <li key={idx}>\r\n                      <label>\r\n                        <input\r\n                          type=\"radio\"\r\n                          name={'q'+i}\r\n                          checked={answers[i] === idx}\r\n                          onChange={() => chooseAnswer(i, idx)}\r\n                        />\r\n                        {' '}{opt}\r\n                      </label>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}