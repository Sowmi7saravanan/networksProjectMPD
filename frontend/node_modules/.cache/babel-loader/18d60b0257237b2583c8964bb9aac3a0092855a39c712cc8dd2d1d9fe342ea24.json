{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import{getJson,postJson}from'../api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function QuizPage(_ref){let{token,userId}=_ref;const[quiz,setQuiz]=useState(null);const[answers,setAnswers]=useState([]);const[started,setStarted]=useState(false);const[timeLeft,setTimeLeft]=useState(30*60);// 30 minutes default\nconst videoRef=useRef(null);const audioCtxRef=useRef(null);const analyserRef=useRef(null);const detectionFrameRef=useRef(null);useEffect(()=>{async function loadQuiz(){const q=await getJson('/api/quiz',token);setQuiz(q);setAnswers(new Array(q.questions.length).fill(null));}loadQuiz();},[token]);// Start media and detection\nasync function startTest(){// Request camera and mic\ntry{const stream=await navigator.mediaDevices.getUserMedia({video:true,audio:true});if(videoRef.current){videoRef.current.srcObject=stream;videoRef.current.play().catch(()=>{});}// setup ultrasonic emitter + receiver\nstartUltrasonic(stream);setStarted(true);// start timer\nstartTimer();}catch(err){alert('Camera and microphone are required to start the test.');}}function startTimer(){const interval=setInterval(()=>{setTimeLeft(t=>{if(t<=1){clearInterval(interval);onSubmit();return 0;}return t-1;});},1000);}// Ultrasonic tone and detection (prototype)\nfunction startUltrasonic(stream){// AudioContext\nconst AudioContext=window.AudioContext||window.webkitAudioContext;const audioCtx=new AudioContext();audioCtxRef.current=audioCtx;// Create oscillator for 19kHz\nconst osc=audioCtx.createOscillator();osc.type='sine';try{osc.frequency.setValueAtTime(19000,audioCtx.currentTime);}catch(e){/* some browsers block high freq */}const gain=audioCtx.createGain();gain.gain.value=0.2;// low volume\nosc.connect(gain).connect(audioCtx.destination);osc.start();// Set up analyser to read mic input\nconst mic=audioCtx.createMediaStreamSource(stream);const analyser=audioCtx.createAnalyser();analyser.fftSize=4096;mic.connect(analyser);analyserRef.current=analyser;const data=new Uint8Array(analyser.frequencyBinCount);// detection loop\nfunction detect(){analyser.getByteFrequencyData(data);// calculate bin for ~19kHz\nconst sampleRate=audioCtx.sampleRate;const binFreq=sampleRate/analyser.fftSize;const binIndex=Math.round(19000/binFreq);const amplitude=data[binIndex]||0;// threshold experimentally chosen — tune per device\nif(amplitude>40){// send alert to server\npostJson('/api/alert',{type:'ultrasonic',message:'Possible phone detected (amp='+amplitude+')'},token);// also show user alert\nconsole.warn('Possible phone detected — amplitude',amplitude);}detectionFrameRef.current=requestAnimationFrame(detect);}detect();}function chooseAnswer(i,optIdx){const copy=answers.slice();copy[i]=optIdx;setAnswers(copy);// autosave to localStorage (optional)\nlocalStorage.setItem('autosave_answers',JSON.stringify(copy));}async function onSubmit(){// stop detection\nif(detectionFrameRef.current)cancelAnimationFrame(detectionFrameRef.current);if(audioCtxRef.current)audioCtxRef.current.close().catch(()=>{});// submit\nconst res=await postJson('/api/submit',{answers},token);alert(\"Test submitted. Score: \".concat(res.score,\"/\").concat(res.total));// redirect or clear\nwindow.location.reload();}if(!quiz)return/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:\"Loading quiz\\u2026\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:quiz.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer\",children:[\"Time left: \",Math.floor(timeLeft/60),\":\",String(timeLeft%60).padStart(2,'0')]})]}),!started?/*#__PURE__*/_jsxs(\"div\",{className:\"start-block\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Camera and microphone permission is mandatory. Click Start to allow.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:startTest,children:\"Start Test (Allow camera & mic)\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"exam-area\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"left-col\",children:[/*#__PURE__*/_jsx(\"video\",{ref:videoRef,width:\"320\",height:\"240\",autoPlay:true,muted:true,style:{border:'2px solid #666'}}),/*#__PURE__*/_jsx(\"div\",{className:\"actions\",children:/*#__PURE__*/_jsx(\"button\",{onClick:onSubmit,children:\"Submit Test\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"questions\",children:quiz.questions.map((q,i)=>/*#__PURE__*/_jsxs(\"div\",{className:\"question-card\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Q\",i+1,\".\"]}),\" \",q.q]}),/*#__PURE__*/_jsx(\"ul\",{children:q.options.map((opt,idx)=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:'q'+i,checked:answers[i]===idx,onChange:()=>chooseAnswer(i,idx)}),' ',opt]})},idx))})]},i))})]})]});}","map":{"version":3,"names":["React","useEffect","useState","useRef","getJson","postJson","jsx","_jsx","jsxs","_jsxs","QuizPage","_ref","token","userId","quiz","setQuiz","answers","setAnswers","started","setStarted","timeLeft","setTimeLeft","videoRef","audioCtxRef","analyserRef","detectionFrameRef","loadQuiz","q","Array","questions","length","fill","startTest","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","play","catch","startUltrasonic","startTimer","err","alert","interval","setInterval","t","clearInterval","onSubmit","AudioContext","window","webkitAudioContext","audioCtx","osc","createOscillator","type","frequency","setValueAtTime","currentTime","e","gain","createGain","value","connect","destination","start","mic","createMediaStreamSource","analyser","createAnalyser","fftSize","data","Uint8Array","frequencyBinCount","detect","getByteFrequencyData","sampleRate","binFreq","binIndex","Math","round","amplitude","message","console","warn","requestAnimationFrame","chooseAnswer","i","optIdx","copy","slice","localStorage","setItem","JSON","stringify","cancelAnimationFrame","close","res","concat","score","total","location","reload","className","children","title","floor","String","padStart","onClick","ref","width","height","autoPlay","muted","style","border","map","options","opt","idx","name","checked","onChange"],"sources":["C:/Users/sowmiya/Desktop/MobilePhoneDetector/frontend/src/pages/QuizPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { getJson, postJson } from '../api';\r\n\r\nexport default function QuizPage({ token, userId }){\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [started, setStarted] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(30*60); // 30 minutes default\r\n  const videoRef = useRef(null);\r\n  const audioCtxRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const detectionFrameRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    async function loadQuiz(){\r\n      const q = await getJson('/api/quiz', token);\r\n      setQuiz(q);\r\n      setAnswers(new Array(q.questions.length).fill(null));\r\n    }\r\n    loadQuiz();\r\n  }, [token]);\r\n\r\n  // Start media and detection\r\n  async function startTest(){\r\n    // Request camera and mic\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n      if(videoRef.current){ videoRef.current.srcObject = stream; videoRef.current.play().catch(()=>{}); }\r\n      // setup ultrasonic emitter + receiver\r\n      startUltrasonic(stream);\r\n      setStarted(true);\r\n      // start timer\r\n      startTimer();\r\n    } catch(err){\r\n      alert('Camera and microphone are required to start the test.');\r\n    }\r\n  }\r\n\r\n  function startTimer(){\r\n    const interval = setInterval(() => {\r\n      setTimeLeft(t => {\r\n        if(t <= 1){ clearInterval(interval); onSubmit(); return 0; }\r\n        return t - 1;\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  // Ultrasonic tone and detection (prototype)\r\n  function startUltrasonic(stream){\r\n    // AudioContext\r\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\r\n    const audioCtx = new AudioContext();\r\n    audioCtxRef.current = audioCtx;\r\n\r\n    // Create oscillator for 19kHz\r\n    const osc = audioCtx.createOscillator();\r\n    osc.type = 'sine';\r\n    try { osc.frequency.setValueAtTime(19000, audioCtx.currentTime); } catch(e){ /* some browsers block high freq */ }\r\n    const gain = audioCtx.createGain();\r\n    gain.gain.value = 0.2; // low volume\r\n\r\n    osc.connect(gain).connect(audioCtx.destination);\r\n    osc.start();\r\n\r\n    // Set up analyser to read mic input\r\n    const mic = audioCtx.createMediaStreamSource(stream);\r\n    const analyser = audioCtx.createAnalyser();\r\n    analyser.fftSize = 4096;\r\n    mic.connect(analyser);\r\n    analyserRef.current = analyser;\r\n\r\n    const data = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n    // detection loop\r\n    function detect(){\r\n      analyser.getByteFrequencyData(data);\r\n      // calculate bin for ~19kHz\r\n      const sampleRate = audioCtx.sampleRate;\r\n      const binFreq = sampleRate / analyser.fftSize;\r\n      const binIndex = Math.round(19000 / binFreq);\r\n      const amplitude = data[binIndex] || 0;\r\n      // threshold experimentally chosen — tune per device\r\n      if(amplitude > 40){\r\n        // send alert to server\r\n        postJson('/api/alert', { type: 'ultrasonic', message: 'Possible phone detected (amp=' + amplitude + ')' }, token);\r\n        // also show user alert\r\n        console.warn('Possible phone detected — amplitude', amplitude);\r\n      }\r\n      detectionFrameRef.current = requestAnimationFrame(detect);\r\n    }\r\n    detect();\r\n  }\r\n\r\n  function chooseAnswer(i, optIdx){\r\n    const copy = answers.slice();\r\n    copy[i] = optIdx;\r\n    setAnswers(copy);\r\n    // autosave to localStorage (optional)\r\n    localStorage.setItem('autosave_answers', JSON.stringify(copy));\r\n  }\r\n\r\n  async function onSubmit(){\r\n    // stop detection\r\n    if(detectionFrameRef.current) cancelAnimationFrame(detectionFrameRef.current);\r\n    if(audioCtxRef.current) audioCtxRef.current.close().catch(()=>{});\r\n    // submit\r\n    const res = await postJson('/api/submit', { answers }, token);\r\n    alert(`Test submitted. Score: ${res.score}/${res.total}`);\r\n    // redirect or clear\r\n    window.location.reload();\r\n  }\r\n\r\n  if(!quiz) return <div className=\"centered\">Loading quiz…</div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h2>{quiz.title}</h2>\r\n        <div className=\"timer\">Time left: {Math.floor(timeLeft/60)}:{String(timeLeft%60).padStart(2,'0')}</div>\r\n      </div>\r\n\r\n      {!started ? (\r\n        <div className=\"start-block\">\r\n          <p>Camera and microphone permission is mandatory. Click Start to allow.</p>\r\n          <button onClick={startTest}>Start Test (Allow camera & mic)</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"exam-area\">\r\n          <div className=\"left-col\">\r\n            <video ref={videoRef} width=\"320\" height=\"240\" autoPlay muted style={{border:'2px solid #666'}}/>\r\n            <div className=\"actions\">\r\n              <button onClick={onSubmit}>Submit Test</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"questions\">\r\n            {quiz.questions.map((q, i) => (\r\n              <div key={i} className=\"question-card\">\r\n                <p><strong>Q{i+1}.</strong> {q.q}</p>\r\n                <ul>\r\n                  {q.options.map((opt, idx) => (\r\n                    <li key={idx}>\r\n                      <label>\r\n                        <input\r\n                          type=\"radio\"\r\n                          name={'q'+i}\r\n                          checked={answers[i] === idx}\r\n                          onChange={() => chooseAnswer(i, idx)}\r\n                        />\r\n                        {' '}{opt}\r\n                      </label>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}