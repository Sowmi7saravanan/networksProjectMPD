{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sowmiya\\\\Desktop\\\\MobilePhoneDetector\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { postJson } from '../api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  onLogin\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [mode, setMode] = useState('login'); // \"login\" or \"register\"\n  const [loading, setLoading] = useState(false);\n  async function doLogin() {\n    if (!email || !password) return alert(\"Please enter email and password\");\n    setLoading(true);\n    const res = await postJson('/api/auth/login', {\n      email,\n      password\n    });\n    setLoading(false);\n    if (res.token) {\n      onLogin({\n        token: res.token,\n        userId: res.userId,\n        name: res.name\n      });\n    } else {\n      alert(res.error || 'Login failed');\n    }\n  }\n  async function doRegister() {\n    if (!name || !email || !password) return alert(\"Please fill all fields\");\n    setLoading(true);\n    const res = await postJson('/api/auth/register', {\n      name,\n      email,\n      password\n    });\n    setLoading(false);\n    if (res.token) {\n      onLogin({\n        token: res.token,\n        userId: res.userId,\n        name: res.name\n      });\n    } else {\n      alert(res.error || 'Registration failed');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"centered\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: mode === 'login' ? 'Candidate Login' : 'Register New Account'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), mode === 'register' && /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Password\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), mode === 'login' ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: doLogin,\n      disabled: loading,\n      children: loading ? \"Logging in...\" : \"Login & Start Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: doRegister,\n      disabled: loading,\n      children: loading ? \"Registering...\" : \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"muted\",\n      children: mode === 'login' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Don\\u2019t have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'blue',\n            cursor: 'pointer'\n          },\n          onClick: () => setMode('register'),\n          children: \"Register here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Already registered?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'blue',\n            cursor: 'pointer'\n          },\n          onClick: () => setMode('login'),\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"hzrXumOruOELhew9ugcFvflaYtE=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","postJson","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","onLogin","_s","email","setEmail","password","setPassword","name","setName","mode","setMode","loading","setLoading","doLogin","alert","res","token","userId","error","doRegister","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","type","onClick","disabled","style","color","cursor","_c","$RefreshReg$"],"sources":["C:/Users/sowmiya/Desktop/MobilePhoneDetector/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { postJson } from '../api';\r\n\r\nexport default function Login({ onLogin }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [mode, setMode] = useState('login'); // \"login\" or \"register\"\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function doLogin() {\r\n    if (!email || !password) return alert(\"Please enter email and password\");\r\n\r\n    setLoading(true);\r\n    const res = await postJson('/api/auth/login', { email, password });\r\n    setLoading(false);\r\n\r\n    if (res.token) {\r\n      onLogin({ token: res.token, userId: res.userId, name: res.name });\r\n    } else {\r\n      alert(res.error || 'Login failed');\r\n    }\r\n  }\r\n\r\n  async function doRegister() {\r\n    if (!name || !email || !password) return alert(\"Please fill all fields\");\r\n\r\n    setLoading(true);\r\n    const res = await postJson('/api/auth/register', { name, email, password });\r\n    setLoading(false);\r\n\r\n    if (res.token) {\r\n      onLogin({ token: res.token, userId: res.userId, name: res.name });\r\n    } else {\r\n      alert(res.error || 'Registration failed');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"centered\">\r\n      <h2>{mode === 'login' ? 'Candidate Login' : 'Register New Account'}</h2>\r\n\r\n      {mode === 'register' && (\r\n        <input\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n      )}\r\n\r\n      <input\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={e => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        placeholder=\"Password\"\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={e => setPassword(e.target.value)}\r\n      />\r\n\r\n      {mode === 'login' ? (\r\n        <button onClick={doLogin} disabled={loading}>\r\n          {loading ? \"Logging in...\" : \"Login & Start Test\"}\r\n        </button>\r\n      ) : (\r\n        <button onClick={doRegister} disabled={loading}>\r\n          {loading ? \"Registering...\" : \"Register\"}\r\n        </button>\r\n      )}\r\n\r\n      <p className=\"muted\">\r\n        {mode === 'login' ? (\r\n          <>\r\n            Donâ€™t have an account?{' '}\r\n            <span style={{ color: 'blue', cursor: 'pointer' }} onClick={() => setMode('register')}>\r\n              Register here\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            Already registered?{' '}\r\n            <span style={{ color: 'blue', cursor: 'pointer' }} onClick={() => setMode('login')}>\r\n              Login here\r\n            </span>\r\n          </>\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}